# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module GmailApi
  class ListThreadsResponse < BaseModel
    # Page token to retrieve the next page of results in the list.
    # @return [String]
    attr_accessor :next_page_token

    # Estimated total number of results.
    # @return [Integer]
    attr_accessor :result_size_estimate

    # List of threads.
    # @return [List of Thread]
    attr_accessor :threads

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["next_page_token"] = "nextPageToken"
        @hash["result_size_estimate"] = "resultSizeEstimate"
        @hash["threads"] = "threads"
      end
      @hash
    end

    def initialize(next_page_token = nil,
                   result_size_estimate = nil,
                   threads = nil)
      @next_page_token = next_page_token
      @result_size_estimate = result_size_estimate
      @threads = threads
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        next_page_token = hash["nextPageToken"]
        result_size_estimate = hash["resultSizeEstimate"]
        # Parameter is an array, so we need to iterate through it
        threads = nil
        if hash["threads"] != nil
          threads = Array.new
          hash["threads"].each{|structure| threads << (Thread.from_hash(structure) if structure)}
        end

        # Create object from extracted values
        ListThreadsResponse.new(next_page_token,
                                result_size_estimate,
                                threads)
      end
    end
  end
end
