# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module GmailApi
  class History < BaseModel
    # The mailbox sequence ID.
    # @return [String]
    attr_accessor :id

    # Labels added to messages in this history record.
    # @return [List of HistoryLabelAdded]
    attr_accessor :labels_added

    # Labels removed from messages in this history record.
    # @return [List of HistoryLabelRemoved]
    attr_accessor :labels_removed

    # List of messages changed in this history record. The fields for specific change types, such as messagesAdded may duplicate messages in this field. We recommend using the specific change-type fields instead of this.
    # @return [List of Message]
    attr_accessor :messages

    # Messages added to the mailbox in this history record.
    # @return [List of HistoryMessageAdded]
    attr_accessor :messages_added

    # Messages deleted (not Trashed) from the mailbox in this history record.
    # @return [List of HistoryMessageDeleted]
    attr_accessor :messages_deleted

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["id"] = "id"
        @hash["labels_added"] = "labelsAdded"
        @hash["labels_removed"] = "labelsRemoved"
        @hash["messages"] = "messages"
        @hash["messages_added"] = "messagesAdded"
        @hash["messages_deleted"] = "messagesDeleted"
      end
      @hash
    end

    def initialize(id = nil,
                   labels_added = nil,
                   labels_removed = nil,
                   messages = nil,
                   messages_added = nil,
                   messages_deleted = nil)
      @id = id
      @labels_added = labels_added
      @labels_removed = labels_removed
      @messages = messages
      @messages_added = messages_added
      @messages_deleted = messages_deleted
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        id = hash["id"]
        # Parameter is an array, so we need to iterate through it
        labels_added = nil
        if hash["labelsAdded"] != nil
          labels_added = Array.new
          hash["labelsAdded"].each{|structure| labels_added << (HistoryLabelAdded.from_hash(structure) if structure)}
        end
        # Parameter is an array, so we need to iterate through it
        labels_removed = nil
        if hash["labelsRemoved"] != nil
          labels_removed = Array.new
          hash["labelsRemoved"].each{|structure| labels_removed << (HistoryLabelRemoved.from_hash(structure) if structure)}
        end
        # Parameter is an array, so we need to iterate through it
        messages = nil
        if hash["messages"] != nil
          messages = Array.new
          hash["messages"].each{|structure| messages << (Message.from_hash(structure) if structure)}
        end
        # Parameter is an array, so we need to iterate through it
        messages_added = nil
        if hash["messagesAdded"] != nil
          messages_added = Array.new
          hash["messagesAdded"].each{|structure| messages_added << (HistoryMessageAdded.from_hash(structure) if structure)}
        end
        # Parameter is an array, so we need to iterate through it
        messages_deleted = nil
        if hash["messagesDeleted"] != nil
          messages_deleted = Array.new
          hash["messagesDeleted"].each{|structure| messages_deleted << (HistoryMessageDeleted.from_hash(structure) if structure)}
        end

        # Create object from extracted values
        History.new(id,
                    labels_added,
                    labels_removed,
                    messages,
                    messages_added,
                    messages_deleted)
      end
    end
  end
end
