# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module GmailApi
  class Thread < BaseModel
    # The ID of the last history record that modified this thread.
    # @return [String]
    attr_accessor :history_id

    # The unique ID of the thread.
    # @return [String]
    attr_accessor :id

    # The list of messages in the thread.
    # @return [List of Message]
    attr_accessor :messages

    # A short part of the message text.
    # @return [String]
    attr_accessor :snippet

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["history_id"] = "historyId"
        @hash["id"] = "id"
        @hash["messages"] = "messages"
        @hash["snippet"] = "snippet"
      end
      @hash
    end

    def initialize(history_id = nil,
                   id = nil,
                   messages = nil,
                   snippet = nil)
      @history_id = history_id
      @id = id
      @messages = messages
      @snippet = snippet
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        history_id = hash["historyId"]
        id = hash["id"]
        # Parameter is an array, so we need to iterate through it
        messages = nil
        if hash["messages"] != nil
          messages = Array.new
          hash["messages"].each{|structure| messages << (Message.from_hash(structure) if structure)}
        end
        snippet = hash["snippet"]

        # Create object from extracted values
        Thread.new(history_id,
                   id,
                   messages,
                   snippet)
      end
    end
  end
end
