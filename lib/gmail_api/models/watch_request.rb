# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module GmailApi
  class WatchRequest < BaseModel
    # Filtering behavior of labelIds list specified.
    # @return [LabelFilterActionEnum]
    attr_accessor :label_filter_action

    # List of label_ids to restrict notifications about. By default, if unspecified, all changes are pushed out. If specified then dictates which labels are required for a push notification to be generated.
    # @return [List of String]
    attr_accessor :label_ids

    # A fully qualified Google Cloud Pub/Sub API topic name to publish the events to. This topic name **must** already exist in Cloud Pub/Sub and you **must** have already granted gmail "publish" permission on it. For example, "projects/my-project-identifier/topics/my-topic-name" (using the Cloud Pub/Sub "v1" topic naming format).
    # Note that the "my-project-identifier" portion must exactly match your Google developer project id (the one executing this watch request).
    # @return [String]
    attr_accessor :topic_name

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["label_filter_action"] = "labelFilterAction"
        @hash["label_ids"] = "labelIds"
        @hash["topic_name"] = "topicName"
      end
      @hash
    end

    def initialize(label_filter_action = nil,
                   label_ids = nil,
                   topic_name = nil)
      @label_filter_action = label_filter_action
      @label_ids = label_ids
      @topic_name = topic_name
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        label_filter_action = hash["labelFilterAction"]
        label_ids = hash["labelIds"]
        topic_name = hash["topicName"]

        # Create object from extracted values
        WatchRequest.new(label_filter_action,
                         label_ids,
                         topic_name)
      end
    end
  end
end
